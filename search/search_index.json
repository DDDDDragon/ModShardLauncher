{"config":{"lang":["en","zh"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"ModShardLauncher Modding Documentation","text":"<p>Welcome to the ModShardLauncher Modding Documentation !</p> <p>Multiple languages</p> <p>This documentation is available in multiple languages.  You can change the language by clicking the language button at the top of the page.   Some pages may not be available in all languages, so feel free to contribute !</p>"},{"location":"guides/api.html","title":"ModShardLoader API","text":"<p>WIP</p> <p>The API documentation is a work in progress and not automated.  It may become out of date, or change drastically.   To get the latest, up to date documentation, read the XAML docstrings in MSL's source code.</p>"},{"location":"guides/api.html#objects","title":"Objects","text":"AddObject <code>method</code> GetObject <code>method</code> SetObject <code>method</code>"},{"location":"guides/api.html#summary","title":"Summary","text":"<p>Adds a gameobject to the game.</p>"},{"location":"guides/api.html#example","title":"Example","text":"<pre><code>ModLoader.AddObject(\"o_myobject\")\n</code></pre>"},{"location":"guides/api.html#arguments","title":"Arguments","text":"Type Name Description <code>String</code> <code>name</code> The name of the gameobject to create."},{"location":"guides/api.html#returns","title":"Returns","text":"Type Description <code>UndertaleGameObject</code> The gameobject created."},{"location":"guides/api.html#summary_1","title":"Summary","text":"<p>Gets a gameobject from the game files.</p>"},{"location":"guides/api.html#example_1","title":"Example","text":"<pre><code>ModLoader.GetObject(\"o_myobject\")\n</code></pre>"},{"location":"guides/api.html#arguments_1","title":"Arguments","text":"Type Name Description <code>String</code> <code>name</code> The name of the gameobject to get."},{"location":"guides/api.html#returns_1","title":"Returns","text":"Type Description <code>UndertaleGameObject</code> The gameobject if found."},{"location":"guides/api.html#summary_2","title":"Summary","text":"<p>Replaces a gameobject from the game with your own.</p>"},{"location":"guides/api.html#example_2","title":"Example","text":"<pre><code>ModLoader.SetObject(\"o_myobject\", myObject)\n</code></pre>"},{"location":"guides/api.html#arguments_2","title":"Arguments","text":"Type Name Description <code>String</code> <code>name</code> The name of the gameobject to replace. <code>UndertaleGameObject</code> <code>o</code> The gameobject to replace it with."},{"location":"guides/api.html#returns_2","title":"Returns","text":"Type Description <code>N/A</code> N/A."},{"location":"guides/api.html#sprites","title":"Sprites","text":"GetSprite <code>method</code>"},{"location":"guides/api.html#summary_3","title":"Summary","text":"<p>Gets a sprite from the game files.</p>"},{"location":"guides/api.html#example_3","title":"Example","text":"<pre><code>ModLoader.GetSprite(\"s_mySprite\")\n</code></pre>"},{"location":"guides/api.html#arguments_3","title":"Arguments","text":"Type Name Description <code>String</code> <code>name</code> The name of the sprite to get."},{"location":"guides/api.html#returns_3","title":"Returns","text":"Type Description <code>UndertaleSprite</code> The sprite if found."},{"location":"guides/api.html#tables","title":"Tables","text":"GetTable <code>method</code> SetTable <code>method</code>"},{"location":"guides/api.html#summary_4","title":"Summary","text":"<p>Gets a table from the game's files.</p>"},{"location":"guides/api.html#example_4","title":"Example","text":"<pre><code>ModLoader.GetTable(\"gml_GlobalScript_table_Miniboss_type\")\n</code></pre>"},{"location":"guides/api.html#arguments_4","title":"Arguments","text":"Type Name Description <code>String</code> <code>name</code> The name of the table to get."},{"location":"guides/api.html#returns_4","title":"Returns","text":"Type Description <code>List&lt;string&gt;?</code> The table's content as a list of strings."},{"location":"guides/api.html#summary_5","title":"Summary","text":"<p>Replaces a table from the game with your own.</p>"},{"location":"guides/api.html#example_5","title":"Example","text":"<pre><code>ModLoader.SetTable(\"gml_GlobalScript_table_Miniboss_type\")\n</code></pre>"},{"location":"guides/api.html#arguments_5","title":"Arguments","text":"Type Name Description <code>List&lt;string&gt;</code> <code>table</code> The table to replace the game's table with. <code>String</code> <code>name</code> The name of the table to get."},{"location":"guides/api.html#returns_5","title":"Returns","text":"Type Description <code>N/A</code> N/A"},{"location":"guides/api.html#code","title":"Code","text":"AddCode <code>method</code> GetUMTCodeFromFile <code>method</code> GetStringGMLFromFile <code>method</code> ReplaceGMLString <code>method</code>"},{"location":"guides/api.html#summary_6","title":"Summary","text":"<p>Adds a code to the game.</p>"},{"location":"guides/api.html#example_6","title":"Example","text":"<pre><code>ModLoader.AddCode(\"scr_actionsLogUpdate(\\\"Hello World !\\\")\", \"myCode\")\n</code></pre>"},{"location":"guides/api.html#arguments_6","title":"Arguments","text":"Type Name Description <code>String</code> <code>codeAsString</code> The gml code as a string. <code>String</code> <code>name</code> The name of the code to create."},{"location":"guides/api.html#returns_6","title":"Returns","text":"Type Description <code>UndertaleCode</code> The code created."},{"location":"guides/api.html#summary_7","title":"Summary","text":"<p>Gets a code from the game files.</p>"},{"location":"guides/api.html#example_7","title":"Example","text":"<pre><code>ModLoader.GetUMTCodeFromFile(\"gml_GlobalScript_scr_sessionDataInit\")\n</code></pre>"},{"location":"guides/api.html#arguments_7","title":"Arguments","text":"Type Name Description <code>String</code> <code>fileName</code> The name of the code to get."},{"location":"guides/api.html#returns_7","title":"Returns","text":"Type Description <code>UndertaleCode</code> The code if found."},{"location":"guides/api.html#summary_8","title":"Summary","text":"<p>Gets the content of a code from the game files as a string of GML.</p>"},{"location":"guides/api.html#example_8","title":"Example","text":"<pre><code>ModLoader.GetStringGMLFromFile(\"gml_GlobalScript_scr_sessionDataInit\")\n</code></pre>"},{"location":"guides/api.html#arguments_8","title":"Arguments","text":"Type Name Description <code>String</code> <code>fileName</code> The name of the code to get."},{"location":"guides/api.html#returns_8","title":"Returns","text":"Type Description <code>String</code> The content of the code if found."},{"location":"guides/api.html#summary_9","title":"Summary","text":"<p>Replaces a code in the game with a string of GML.</p>"},{"location":"guides/api.html#example_9","title":"Example","text":"<pre><code>ModLoader.ReplaceGMLString(\"gml_GlobalScript_scr_sessionDataInit\")\n</code></pre>"},{"location":"guides/api.html#arguments_9","title":"Arguments","text":"Type Name Description <code>String</code> <code>codeAsString</code> The string of GML code to insert. <code>String</code> <code>fileName</code> The name of the code to replace a line. <code>Int</code> <code>position</code> The line to replace with the provided GML."},{"location":"guides/api.html#returns_9","title":"Returns","text":"Type Description <code>N/A</code> N/A"},{"location":"guides/api.html#assembly","title":"Assembly","text":"InsertAssemblyString <code>method</code> ReplaceAssemblyString <code>method</code>"},{"location":"guides/api.html#summary_10","title":"Summary","text":"<p>Inserts an assembly instruction below the provided line.</p>"},{"location":"guides/api.html#example_10","title":"Example","text":"<pre><code>// Example : Inserts the instruction 'pushi.e 1' in 'gml_GlobalScript_scr_sessionDataInit' below line 14.\nModLoader.InsertAssemblyString(\"pushi.e 1\", \"gml_GlobalScript_scr_sessionDataInit\", 14)\n</code></pre>"},{"location":"guides/api.html#arguments_10","title":"Arguments","text":"Type Name Description <code>String</code> <code>codeAsString</code> The string of assembly instruction(s) to insert. <code>String</code> <code>fileName</code> The name of the code to insert the assembly into <code>Int</code> <code>position</code> The line below which we inject the assembly instruction(s)"},{"location":"guides/api.html#returns_10","title":"Returns","text":"Type Description <code>N/A</code> N/A"},{"location":"guides/api.html#summary_11","title":"Summary","text":"<p>Replaces the provided line with an assembly instruction.</p>"},{"location":"guides/api.html#example_11","title":"Example","text":"<pre><code>// Example : Replaces the 8th line in 'gml_GlobalScript_scr_sessionDataInit' with 'pushi.e 1'.\nModLoader.ReplaceAssemblyString(\"pushi.e 1\", \"gml_GlobalScript_scr_sessionDataInit\", 8)\n</code></pre>"},{"location":"guides/api.html#arguments_11","title":"Arguments","text":"Type Name Description <code>String</code> <code>codeAsString</code> The string of assembly instruction(s) to insert. <code>String</code> <code>fileName</code> The name of the code to insert the assembly into <code>Int</code> <code>position</code> The line below which we inject the assembly instruction(s)"},{"location":"guides/api.html#returns_11","title":"Returns","text":"Type Description <code>N/A</code> N/A"},{"location":"guides/api.html#functions-strings-variables","title":"Functions / Strings / Variables","text":"AddFunction <code>method</code> GetVariable <code>method</code> GetString <code>method</code>"},{"location":"guides/api.html#summary_12","title":"Summary","text":"<p>Adds a function to the game.</p>"},{"location":"guides/api.html#example_12","title":"Example","text":"<pre><code>ModLoader.AddFunction(\"scr_actionsLogUpdate(\\\"Hello World !\\\")\", \"myFunction\")\n</code></pre>"},{"location":"guides/api.html#arguments_12","title":"Arguments","text":"Type Name Description <code>String</code> <code>codeAsString</code> The gml code to put in the function as a string. <code>String</code> <code>name</code> The name of the function to create."},{"location":"guides/api.html#returns_12","title":"Returns","text":"Type Description <code>UndertaleCode</code> The code created for the function."},{"location":"guides/api.html#summary_13","title":"Summary","text":"<p>Gets a variable from the game files.</p>"},{"location":"guides/api.html#example_13","title":"Example","text":"<pre><code>ModLoader.GetVariable(\"display_x\")\n</code></pre>"},{"location":"guides/api.html#arguments_13","title":"Arguments","text":"Type Name Description <code>String</code> <code>name</code> The name of the variable to get."},{"location":"guides/api.html#returns_13","title":"Returns","text":"Type Description <code>UndertaleVariable</code> The variable if found."},{"location":"guides/api.html#summary_14","title":"Summary","text":"<p>Gets a variable from the game files.</p>"},{"location":"guides/api.html#example_14","title":"Example","text":"<pre><code>ModLoader.GetString(\"questBreweryOdarAccept00\")\n</code></pre>"},{"location":"guides/api.html#arguments_14","title":"Arguments","text":"Type Name Description <code>String</code> <code>name</code> The name of the string to get."},{"location":"guides/api.html#returns_14","title":"Returns","text":"Type Description <code>UndertaleString</code> The string if found."},{"location":"guides/api.html#patching-stage-1-loading","title":"Patching : Stage 1 (Loading)","text":"<p>The 'Loading' stage is used to get the GML or assembly from the game's files.</p> LoadGML <code>method</code> LoadAssemblyAsString <code>method</code>"},{"location":"guides/api.html#summary_15","title":"Summary","text":"<p>The first step to inject GML.  Loads an existing code from the game files and returns it.</p>"},{"location":"guides/api.html#example_15","title":"Example","text":"<pre><code>ModLoader.LoadGML(\"gml_GlobalScript_scr_sessionDataInit\")\n</code></pre>"},{"location":"guides/api.html#arguments_15","title":"Arguments","text":"Type Name Description <code>String</code> <code>fileName</code> The name of the code to get from the game files."},{"location":"guides/api.html#returns_15","title":"Returns","text":"Type Description <code>FileEnumerable&lt;string&gt;</code> A class containing the loaded GML file, used in Stage 2 methods."},{"location":"guides/api.html#summary_16","title":"Summary","text":"<p>The first step to inject Assembly.  Loads the assembly corresponding to an existing code from the game files and returns it.</p>"},{"location":"guides/api.html#example_16","title":"Example","text":"<pre><code>ModLoader.LoadAssemblyAsString(\"gml_GlobalScript_scr_sessionDataInit\")\n</code></pre>"},{"location":"guides/api.html#arguments_16","title":"Arguments","text":"Type Name Description <code>String</code> <code>fileName</code> The name of the code to get the assembly from in the game files."},{"location":"guides/api.html#returns_16","title":"Returns","text":"Type Description <code>FileEnumerable&lt;string&gt;</code> A class containing the assembly for the loaded code, used in Stage 2 methods."},{"location":"guides/api.html#patching-stage-2-matching","title":"Patching : Stage 2 (Matching)","text":"<p>The 'Matching' stage is used to select a line, or multiple lines that we're going to act upon in stage 3. It is done by providing code to find in the file, or matching every line.</p> MatchFrom <code>method</code> MatchBelow <code>method</code> MatchAll <code>method</code>"},{"location":"guides/api.html#summary_17","title":"Summary","text":"<p>The second step to inject GML or Assembly.  Finds the code in the previously opened file and selects every matching line.</p> <p>Signatures</p> <p>This method has multiple signatures.  This documentation only covers the <code>FileEnumerable + String</code> signature (see Example 1).</p> MainString otherFileEnumerable + StringFileEnumerable + File <pre><code>public static IEnumerable&lt;(Match, string)&gt; MatchFrom(this IEnumerable&lt;string&gt; ienumerable, IEnumerable&lt;string&gt; other)\n</code></pre> <pre><code>public static IEnumerable&lt;(Match, string)&gt; MatchFrom(this IEnumerable&lt;string&gt; ienumerable, string other) \n</code></pre> <pre><code>public static FileEnumerable&lt;(Match, string)&gt; MatchFrom(this FileEnumerable&lt;string&gt; fe, string other) \n</code></pre> <pre><code>public static FileEnumerable&lt;(Match, string)&gt; MatchFrom(this FileEnumerable&lt;string&gt; fe, ModFile modFile, string fileName)\n</code></pre>"},{"location":"guides/api.html#examples","title":"Examples","text":"<pre><code>// Example 1 : Selecting a matching String in a GML file\nModLoader.LoadGML(\"gml_GlobalScript_scr_sessionDataInit\").MatchFrom(\"if (!instance_exists(o_music_controller))\")\n\n// Example 2 : Selecting the matching content of a file in a GML file\nModLoader.LoadGML(\"gml_GlobalScript_scr_sessionDataInit\").MatchFrom(ModFiles, \"my_matching_file.gml\")\n\n// Example 3 : Selecting a matching assembly instruction String in an assembly file\nModLoader.LoadAssemblyAsString(\"gml_GlobalScript_scr_sessionDataInit\").MatchFrom(\"pushi.e 1\")\n</code></pre>"},{"location":"guides/api.html#arguments_17","title":"Arguments","text":"Type Name Description <code>FileEnumerable&lt;string&gt;</code> <code>fe</code> The previously opened file <code>String</code> <code>other</code> The code to find and match with the file"},{"location":"guides/api.html#returns_17","title":"Returns","text":"Type Description <code>FileEnumerable&lt;(Match, string)&gt;</code> A class that contains the loaded code with selected parts defined, ready for Stage 3."},{"location":"guides/api.html#summary_18","title":"Summary","text":"<p>The second step to inject GML or Assembly.  Finds the passed string/file in the previously opened file and selects the <code>N</code> lines below the matching part.</p> <p>Signatures</p> <p>This method has multiple signatures.  This documentation only covers the <code>FileEnumerable + String</code> signature (see Example 1).</p> MainString otherFileEnumerable + StringFileEnumerable + File <pre><code>public static IEnumerable&lt;(Match, string)&gt; MatchBelow(this IEnumerable&lt;string&gt; ienumerable, IEnumerable&lt;string&gt; other, int len)\n</code></pre> <pre><code>public static IEnumerable&lt;(Match, string)&gt; MatchBelow(this IEnumerable&lt;string&gt; ienumerable, string other, int len) \n</code></pre> <pre><code>public static FileEnumerable&lt;(Match, string)&gt; MatchBelow(this FileEnumerable&lt;string&gt; fe, string other, int len) \n</code></pre> <pre><code>public static FileEnumerable&lt;(Match, string)&gt; MatchBelow(this FileEnumerable&lt;string&gt; fe, ModFile modFile, string fileName, int len) \n</code></pre>"},{"location":"guides/api.html#example_17","title":"Example","text":"<pre><code>// Example 1 : Selecting 1 line below a matching String in a GML file\nModLoader.LoadGML(\"gml_GlobalScript_scr_sessionDataInit\").MatchBelow(\"if (!instance_exists(o_music_controller))\", 1)\n\n// Example 2 : Selecting the 4 lines below a matching file in a GML file\nModLoader.LoadGML(\"gml_GlobalScript_scr_sessionDataInit\").MatchBelow(ModFiles, \"my_matching_file.gml\", 4)\n\n// Example 3 : Selecting 1 line below a matching assembly instruction String in an assembly file\nModLoader.LoadAssemblyAsString(\"gml_GlobalScript_scr_sessionDataInit\").MatchBelow(\"pushi.e 1\", 1)\n</code></pre>"},{"location":"guides/api.html#arguments_18","title":"Arguments","text":"Type Name Description <code>FileEnumerable&lt;string&gt;</code> <code>fe</code> The previously opened file <code>String</code> <code>other</code> The code to match with the file <code>Int</code> <code>len</code> The amount of lines below the match to select."},{"location":"guides/api.html#returns_18","title":"Returns","text":"Type Description <code>FileEnumerable&lt;(Match, string)&gt;</code> A class that contains the loaded code with selected parts defined, ready for Stage 3."},{"location":"guides/api.html#summary_19","title":"Summary","text":"<p>The second step to inject GML or Assembly.  Selects all lines in the previously opened file.</p> <p>Signatures</p> <p>This method has multiple signatures.  This documentation only covers the <code>FileEnumerable</code> signature.</p> MainFileEnumerable <pre><code>public static IEnumerable&lt;(Match, string)&gt; MatchAll(this IEnumerable&lt;string&gt; ienumerable)\n</code></pre> <pre><code>public static FileEnumerable&lt;(Match, string)&gt; MatchAll(this FileEnumerable&lt;string&gt; fe) \n</code></pre>"},{"location":"guides/api.html#example_18","title":"Example","text":"<pre><code>// Example : Selecting every line in a GML file\nModLoader.LoadGML(\"gml_GlobalScript_scr_sessionDataInit\").MatchAll()\n</code></pre>"},{"location":"guides/api.html#arguments_19","title":"Arguments","text":"Type Name Description <code>FileEnumerable&lt;string&gt;</code> <code>fe</code> The previously opened file."},{"location":"guides/api.html#returns_19","title":"Returns","text":"Type Description <code>FileEnumerable&lt;(Match, string)&gt;</code> A class that contains the loaded code with selected parts defined, ready for Stage 3."},{"location":"guides/api.html#patching-stage-3-acting","title":"Patching : Stage 3 (Acting)","text":"<p>The 'Acting' stage is used to perform an action on the selected lines.  This can be inserting, replacing, deleting or others, which lead to modification of the original file.</p> Remove <code>method</code> KeepOnly <code>method</code> InsertAbove <code>method</code> InsertBelow <code>method</code> ReplaceBy <code>method</code> FilterMatch <code>method</code>"},{"location":"guides/api.html#summary_20","title":"Summary","text":"<p>The third step to inject GML / assembly.  Removes previously selected lines from opened file.</p>"},{"location":"guides/api.html#example_19","title":"Example","text":"<pre><code>// Example 1 : Remove all lines from script gml_GlobalScript_scr_sessionDataInit\nModLoader.LoadGML(\"gml_GlobalScript_scr_sessionDataInit\").MatchAll().Remove()\n\n// Example 2 : Remove the `pushi.e 1` instruction from gml_Object_c_bed_sleep_crafted_Alarm_0's assembly\nModLoader.LoadAssemblyString(\"gml_Object_c_bed_sleep_crafted_Alarm_0\").MatchFrom(\"pushi.e 1\").Remove()\n</code></pre>"},{"location":"guides/api.html#arguments_20","title":"Arguments","text":"Type Name Description <code>FileEnumerable&lt;(Match, string)&gt;</code> <code>fe</code> The previously opened file."},{"location":"guides/api.html#returns_20","title":"Returns","text":"Type Description <code>FileEnumerable&lt;string&gt;</code> The file with the result of the action."},{"location":"guides/api.html#summary_21","title":"Summary","text":"<p>The third step to inject GML / assembly.  Removes all non-selected lines from opened file.</p>"},{"location":"guides/api.html#example_20","title":"Example","text":"<pre><code>// Example 1 : Remove all lines from script gml_GlobalScript_scr_sessionDataInit except the line where 'global.HP = -1' appears.\nModLoader.LoadGML(\"gml_GlobalScript_scr_sessionDataInit\").MatchFrom(\"global.HP = -1\").KeepOnly()\n\n// Example 2 : Remove all instructions from gml_Object_c_bed_sleep_crafted_Alarm_0's assembly except `pushi.e 1`\nModLoader.LoadAssemblyString(\"gml_Object_c_bed_sleep_crafted_Alarm_0\").MatchFrom(\"pushi.e 1\").KeepOnly()\n</code></pre>"},{"location":"guides/api.html#arguments_21","title":"Arguments","text":"Type Name Description <code>FileEnumerable&lt;(Match, string)&gt;</code> <code>fe</code> The previously opened file."},{"location":"guides/api.html#returns_21","title":"Returns","text":"Type Description <code>FileEnumerable&lt;string&gt;</code> The file with the result of the action."},{"location":"guides/api.html#summary_22","title":"Summary","text":"<p>The third step to inject GML / assembly.  Inserts a string/file content above the selected line.</p>"},{"location":"guides/api.html#example_21","title":"Example","text":"<pre><code>// Example 1 : Adds 'global.myVar = 14' above the line containing 'global.HP = -1'\nModLoader.LoadGML(\"gml_GlobalScript_scr_sessionDataInit\").MatchFrom(\"global.HP = -1\").InsertAbove(\"global.myVar = 14\")\n\n// Example 2 : Adds the content of my_gml_code.gml above the line containing 'global.HP = -1\nModLoader.LoadGML(\"gml_GlobalScript_scr_sessionDataInit\").MatchFrom(\"global.HP = -1\").InsertAbove(ModFiles, \"my_gml_code.gml\")\n\n// Example 3 : Adds the instruction 'popz.v' above the line containing the instruction 'pushi.e 1'\nModLoader.LoadAssemblyString(\"gml_Object_c_bed_sleep_crafted_Alarm_0\").MatchFrom(\"pushi.e 1\").InsertAbove(\"popz.v\")\n</code></pre>"},{"location":"guides/api.html#arguments_22","title":"Arguments","text":"Type Name Description <code>FileEnumerable&lt;(Match, string)&gt;</code> <code>fe</code> The previously opened file. 'String' <code>inserting</code> The code to insert above the selected line."},{"location":"guides/api.html#returns_22","title":"Returns","text":"Type Description <code>FileEnumerable&lt;string&gt;</code> The file with the result of the action."},{"location":"guides/api.html#summary_23","title":"Summary","text":"<p>The third step to inject GML / assembly.  Inserts a string/file content below the selected line.</p>"},{"location":"guides/api.html#example_22","title":"Example","text":"<pre><code>// Example 1 : Adds 'global.myVar = 14' below the line containing 'global.HP = -1'\nModLoader.LoadGML(\"gml_GlobalScript_scr_sessionDataInit\").MatchFrom(\"global.HP = -1\").InsertBelow(\"global.myVar = 14\")\n\n// Example 2 : Adds the content of my_gml_code.gml below the line containing 'global.HP = -1\nModLoader.LoadGML(\"gml_GlobalScript_scr_sessionDataInit\").MatchFrom(\"global.HP = -1\").InsertBelow(ModFiles, \"my_gml_code.gml\")\n\n// Example 3 : Adds the instruction 'popz.v' below the line containing the instruction 'pushi.e 1'\nModLoader.LoadAssemblyString(\"gml_Object_c_bed_sleep_crafted_Alarm_0\").MatchFrom(\"pushi.e 1\").InsertBelow(\"popz.v\")\n</code></pre>"},{"location":"guides/api.html#arguments_23","title":"Arguments","text":"Type Name Description <code>FileEnumerable&lt;(Match, string)&gt;</code> <code>fe</code> The previously opened file. 'String' <code>inserting</code> The code to insert below the selected line."},{"location":"guides/api.html#returns_23","title":"Returns","text":"Type Description <code>FileEnumerable&lt;string&gt;</code> The file with the result of the action."},{"location":"guides/api.html#summary_24","title":"Summary","text":"<p>The third step to inject GML / assembly.  Replaces the selected line with a string/file content.</p>"},{"location":"guides/api.html#example_23","title":"Example","text":"<pre><code>// Example 1 : Replaces the line containing 'global.HP = -1' with 'global.HP = 50'\nModLoader.LoadGML(\"gml_GlobalScript_scr_sessionDataInit\").MatchFrom(\"global.HP = -1\").ReplaceBy(\"global.HP = 50\")\n\n// Example 2 : Replaces the line containing 'global.HP = -1 with the content of 'my_gml_code.gml'\nModLoader.LoadGML(\"gml_GlobalScript_scr_sessionDataInit\").MatchFrom(\"global.HP = -1\").ReplaceBy(ModFiles, \"my_gml_code.gml\")\n\n// Example 3 : Replaces the line containing the instruction 'pushi.e 1' with the instruction 'popz.v'\nModLoader.LoadAssemblyString(\"gml_Object_c_bed_sleep_crafted_Alarm_0\").MatchFrom(\"pushi.e 1\").ReplaceBy(\"popz.v\")\n</code></pre>"},{"location":"guides/api.html#arguments_24","title":"Arguments","text":"Type Name Description <code>FileEnumerable&lt;(Match, string)&gt;</code> <code>fe</code> The previously opened file. 'String' <code>inserting</code> The code to replace the selected line with."},{"location":"guides/api.html#returns_24","title":"Returns","text":"Type Description <code>FileEnumerable&lt;string&gt;</code> The file with the result of the action."},{"location":"guides/api.html#summary_25","title":"Summary","text":"<p>The third step to inject GML / assembly.  TODO</p>"},{"location":"guides/api.html#example_24","title":"Example","text":"<pre><code>TODO\n</code></pre>"},{"location":"guides/api.html#arguments_25","title":"Arguments","text":"Type Name Description <code>FileEnumerable&lt;(Match, string)&gt;</code> <code>fe</code> The previously opened file."},{"location":"guides/api.html#returns_25","title":"Returns","text":"Type Description <code>FileEnumerable&lt;string&gt;</code> The file with the result of the action."},{"location":"guides/api.html#patching-stage-4-saving","title":"Patching : Stage 4 (Saving)","text":"<p>The 'Saving' stage saves the patched difference into the original file.  Failing to add this at the end of your chain of calls will render it useless.</p> Save <code>method</code>"},{"location":"guides/api.html#summary_26","title":"Summary","text":"<p>The final step to inject GML / assembly.  Saves the modified content to the original file.</p>"},{"location":"guides/api.html#example_25","title":"Example","text":"<pre><code>// Example : Loads a script, selects the line containing 'global.HP = -1', replaces it with 'global.HP = 50' and saves it.\nModLoader.LoadGML(\"gml_GlobalScript_scr_sessionDataInit\").MatchFrom(\"global.HP = -1\").ReplaceBy(\"global.HP = 50\").Save()\n</code></pre>"},{"location":"guides/api.html#arguments_26","title":"Arguments","text":"Type Name Description <code>FileEnumerable&lt;(Match, string)&gt;</code> <code>fe</code> The previously opened file."},{"location":"guides/api.html#returns_26","title":"Returns","text":"Type Description <code>ModSummary</code> The file with the result of the action."},{"location":"guides/api.html#patching-utility","title":"Patching : Utility","text":"Peek <code>method</code>"},{"location":"guides/api.html#summary_27","title":"Summary","text":"<p>Can be used before at any stage before saving to print a log in MSL's console containing the current state of the file.  This method doesn't modify the input at all, simply prints it and passes it forward to the next method.</p>"},{"location":"guides/api.html#example_26","title":"Example","text":"<pre><code>// Example : Prints the state of the file before and after replacing.\nModLoader.LoadGML(\"gml_GlobalScript_scr_sessionDataInit\").Peek().MatchFrom(\"global.HP = -1\").ReplaceBy(\"global.HP = 50\").Peek().Save()\n</code></pre>"},{"location":"guides/api.html#arguments_27","title":"Arguments","text":"Type Name Description <code>FileEnumerable&lt;T&gt;</code> <code>fe</code> The previously opened file."},{"location":"guides/api.html#returns_27","title":"Returns","text":"Type Description <code>FileEnumerable&lt;T&gt;</code> The file, exactly as it was when passed as an argument."},{"location":"guides/how-to-play-mod.html","title":"Installing Mods","text":""},{"location":"guides/how-to-play-mod.html#downloading-modshardlauncher","title":"Downloading ModShardLauncher","text":"<p>In order to install mods, you will require the ModShardLauncher.  You can grab it on Github by clicking the button below. </p> <p>ModShardLauncher  </p> <p>Make sure you download the <code>ModShardLauncher.zip</code> file, and not the source code. </p>  Alternatively, you can build ModShardLauncher from source, but it's out of this guide's scope.  <p>You will also require the .NET Desktop Runtime 6.0</p> <p>.NET Desktop Runtime 6.0  </p>"},{"location":"guides/how-to-play-mod.html#modshardlauncher-setup","title":"ModShardLauncher Setup","text":"<ul> <li>Extract <code>ModShardLauncher.zip</code> anywhere.</li> <li>Move <code>ModShard.dll</code> to your Stoneshard folder.</li> <li>Rename <code>data.win</code> to <code>vanilla.win</code>  in your Stoneshard folder.</li> <li>Run <code>ModShardLauncher.exe</code>.</li> </ul>"},{"location":"guides/how-to-play-mod.html#ui-tour","title":"UI Tour","text":"<p>Let's take a quick tour of the UI to better know MSL. </p> <p> </p> <p> The button on the top left of the window shows the button's name.  The <code>Anvil</code> button below that leads to the <code>Mods</code> menu. (This is the only menu you will need.)  The <code>C#</code> button leads to the <code>Mod Sources</code> menu. (It's used by modders to create their mods.)  The <code>Cog</code> button leads to the <code>Settings</code> menu. (At some point you will be able to configure mod settings there.)  </p>"},{"location":"guides/how-to-play-mod.html#installing-a-mod","title":"Installing a Mod","text":"<p>Now that we've got MSL running, let's install some mods.  Here's an example video showing the installation of NeoConsole. (enable the subtitles !)  </p> <ul> <li>Close MSL.</li> <li>Download your mod's <code>.sml</code> file.</li> <li>Place the <code>.sml</code> file in MSL's <code>Mods</code> folder.</li> <li>Start MSL.</li> <li>Click on the anvil button to open the <code>Mods</code> menu.</li> <li>At the top left of the window, click on the folder button.</li> <li>Select the <code>vanilla.win</code> file in the <code>Stoneshard</code> folder</li> <li>In the <code>Mods</code> menu, tick the box next to the mods you wish to enable.</li> <li>Click on the save button and save under any name (eg. <code>modded.win</code>)</li> <li>Close MSL.</li> <li>Start Stoneshard. It should ask you to select a <code>.win</code> file.</li> <li>Select the <code>modded.win</code> file and enjoy your mods !</li> </ul> <p></p>"},{"location":"guides/introduction.html","title":"ModShardLauncher","text":""},{"location":"guides/introduction.html#what-is-modshardlauncher","title":"What is ModShardLauncher?","text":"<p>ModShardLauncher is a tool to patch mods into StoneShard original data files. </p> <p>In the past, we modders used a tool called UndertaleModTool (UTMT) to edit the source code and save it.  But if the game received even the most insignificant of updates, all mods would break.   Additionally, multiple mods couldn't work together unless you actually combined them by hand. </p> <p>To deal with these issues and limitations, I wanted to make a tool.  That's what ModShardLauncher is.</p>"},{"location":"guides/introduction.html#how-does-modshardlauncher-work","title":"How does ModShardLauncher work?","text":"<p>Did you know that UTMT was made in C# ? </p> <p>Using UTMT's source code, ModShardLauncher can load data files.  And with C#'s reflection, ModShardLauncher can load .dll files as mods and patch the 'modthings' into data files, then save them.</p>"},{"location":"guides/introduction.html#i-want-to-start-modding-now","title":"I want to start modding now!","text":"<p>Just check out the guides here !</p>"},{"location":"guides/start-modding.html","title":"Modding Stoneshard with MSL","text":""},{"location":"guides/start-modding.html#introduction","title":"Introduction","text":"<p>ModShardLauncher (or MSL) is a tool that has the ambition of becoming the prefered method of modding Stoneshard.  It is very much at an early stage of development right now, and as such quite a few key features are still missing.  Additionally, some of the included features are still rough around the edges and not as friendly to beginners as we'd like them to be. </p> <p>Important  </p> <p>At this stage, modding Stoneshard with MSL requires you to know how to mod the game with UndertaleModTool.  This is because the focus of the project right now is on including more features, rather than making the existing ones more accessible.  Eventually however, the project will reach a stage where no knowledge of GML or inner workings of the game is necessary for simple mods like adding weapons, swapping textures, etc...</p>"},{"location":"guides/start-modding.html#before-we-start","title":"Before we Start","text":"<p>Before creating a mod, you should have a basic understanding of C# and Visual Studio.</p> <p>If you do not know how to use them, please learn them first, as MSL's API can be a bit complex at times.  Here are some resources to get you started on that :</p> <ul> <li>C# Tutorial</li> <li>Visual Studio Tutorial</li> </ul>"},{"location":"guides/start-modding.html#tools","title":"Tools","text":"IDEs <p>In order to write your mod's code, you'll need a tool such as Visual Studio, Jetbrains Rider or even Visual Studio Code. </p> <p>What do they do ?</p> <p>These are professional development tools that can help you write code.  This guide will use Visual Studio, as it is both free and easier to use for beginners than Rider.</p> <p>While installing Visual Studio, make sure you choose the <code>.NET Desktop Development</code> workload.  You do not need to download any other workload.</p> .NET 6.0 SDK <p>Download the .NET 6.0 SDK, install it and when it's done, restart your computer.</p> ModShardLauncher Template (Optional) <p>You can download the official template for MSL Mods to avoid having to write boilerplate code.  The easiest way to install it is to open a terminal and run the following command :</p> <p><code>dotnet new install ModShardLauncher.Templates</code></p>"},{"location":"guides/start-modding.html#getting-started","title":"Getting Started","text":"<p>Let's start our modding journey by starting <code>ModShardLauncher.exe</code>.  This should create the <code>Mods</code> and <code>ModSources</code> folder if they didn't exist already.  Once this is done, you can simply close MSL for now.</p> <p>Now, let's create a new mod using the MSL Template.  To do this, open up Visual Studio, click Create a new project, and in the search bar type <code>msl</code>.</p> <p></p> <p>For MSL to recognize your mod you need to create the new project in MSL's <code>ModSources</code> folder.  Make sure to also tick the <code>Place solution and project in the same directory</code> box.</p> <p></p> <p>Hit the <code>Create</code> button and you'll be good to go !</p> <p>Alternatively, you can also create a new project using the mod template with the CLI.  To do this, open a terminal, navigate to MSL's <code>ModSources</code> folder and type the following command :</p> <p><code>dotnet new msl --name \"MyMod\"</code></p> <p>Regardless of your method, you should now see a new <code>MyMod</code> folder in your <code>ModSources</code> folder.  It should contain a solution, which you can open in your IDE of choice.</p>"},{"location":"guides/start-modding.html#boilerplate-code","title":"Boilerplate Code","text":"<p>Now that our project is set up, you should have a working solution with a class containing some boilerplate code.  Let's quickly go over what it does, and why it needs to be there.</p> MyMod.cs<pre><code>using ModShardLauncher;\nusing ModShardLauncher.Mods; // (1)!\n\nnamespace MyMod\n{\n    public class MyMod : Mod // (2)!\n    {\n        public override string Author =&gt; \"author\"; // (3)!\n        public override string Name =&gt; \"mod_name\"; // (4)!\n        public override string Description =&gt; \"mod_description\"; // (5)!\n        public override string Version =&gt; \"1.0.0.0\"; // (6)!\n\n        public override void PatchMod() // (7)!\n        {\n\n        }\n    }\n}\n</code></pre> <ol> <li>The <code>using</code> directives allow us to use code from ModShardLauncher to write our mod.</li> <li>This is the base class for your mod.  All of your code should be contained withing it.</li> <li>This variable contains the name of the author of this mod.  Feel free to replace it with yours !  It's visible in MSL's Mod list.</li> <li>This variable contains your mod's name.  Feel free to change it !  It's visible in MSL's Mod list.</li> <li>This variable contains your mod's description.  Feel free to change it !  It's visible in MSL's Mod list.</li> <li>This variable contains your mod's version.  Don't forget to change it when you update your mod !  It's visible in MSL's Mod list.</li> <li>The <code>PatchMod</code> method is your mod's entry point.  Anything within it gets run by the compiler when your mod is patched into a <code>.win</code> file.</li> </ol> <p>Tip</p> <p>Click on the <code>+</code> button next to the code to learn what it does.</p>"},{"location":"guides/start-modding.html#compiling-our-mod","title":"Compiling our Mod","text":"<p>Right now our mod doesn't do, well, anything, but for the sake of learning let's compile it anyway.  </p> <ul> <li>First, let's make sure we saved any change we made to <code>MyMod.cs</code> by pressing Ctrl+S. </li> <li>Open MSL, click the folder icon at the top of the window and select your <code>vanilla.win</code> file.</li> <li>Head to the <code>ModSources</code> menu (by clicking the C# button on the left). </li> <li>Your mod should be listed here with a <code>Compile</code> button next to it.</li> </ul> My mod isn't there ! <p>If your mod isn't there, try restarting MSL.  If you created your project after opening MSL it won't show in the list until your restart it.  If your mod still doesn't appear after restarting, make sure you created your mod in the <code>ModSources</code> folder.</p> <ul> <li>Click the <code>Compile</code> button.  This generates a <code>.sml</code> file in the <code>Mods</code> folder, which is your mod file.  This is the file you can distribute to players.</li> <li>There's no feedback when clicking on the <code>Compile</code> button, so don't be alarmed, it's normal.</li> <li>Next head to the <code>Mods</code> menu, and tick the box next to your mod.</li> <li>Click the save button at the top of the window and save under the name <code>MyMod.win</code>.</li> </ul> <p>That's it you've now compiled your mod !  You can now start Stoneshard, select <code>MyMod.win</code> and test your mod.</p>"},{"location":"guides/start-modding.html#basic-injections","title":"Basic Injections","text":"<p>At this point we've got a basic mod, but it doesn't really do anything.  Let's change that by injecting some code into the game's files. </p> <p>In the <code>MyMod.cs</code> class, let's add the following code :</p> MyMod.cs<pre><code>using ModShardLauncher;\nusing ModShardLauncher.Mods;\n\nnamespace MyMod\n{\n    public class MyMod : Mod\n    {\n        public override string Author =&gt; \"author\";\n        public override string Name =&gt; \"mod_name\";\n        public override string Description =&gt; \"mod_description\";\n        public override string Version =&gt; \"1.0.0.0\";\n\n        public override void PatchMod()\n        {\n            ModLoader.InsertGMLString(\"scr_smoothSaveAuto()\", \"gml_Object_o_player_KeyPress_116\", 0);  // (1)!\n        }\n    }\n}\n</code></pre> <ol> <li>This line inserts the code <code>scr_smoothSaveAuto()</code> into the <code>gml_Object_o_player_KeyPress_116</code> at line <code>0</code>.  We're injecting the gml code necessary to quicksave the game when the player presses the F5 key.</li> </ol> <p>As you can see, using ModLoader.InsertGMLString allows us to inject a string of GML into an existing script.  But MSL's capabilities don't stop there, we can read code from a .gml file you wrote and inject it into a script.  For example, let's create a <code>Codes</code> folder in our project :</p> <p></p> <p>Inside the <code>Codes</code> folder, let's create a <code>myCode.gml</code> file with the following code :</p> myCode.gml<pre><code>scr_actionsLogUpdate(\"Quicksaving...\")\nscr_smoothSaveAuto()\nscr_actionsLogUpdate(\"Game Saved.\")\n</code></pre> <p>Now back in <code>MyMod.cs</code>, let's change our code to the following :</p> MyMod.cs<pre><code>using ModShardLauncher;\nusing ModShardLauncher.Mods;\n\nnamespace MyMod\n{\n    public class MyMod : Mod\n    {\n        public override string Author =&gt; \"author\";\n        public override string Name =&gt; \"mod_name\";\n        public override string Description =&gt; \"mod_description\";\n        public override string Version =&gt; \"1.0.0.0\";\n\n        public override void PatchMod()\n        {\n            ModLoader.InsertGMLString(ModFiles.GetCode(\"myCode.gml\"), \"gml_Object_o_player_KeyPress_116\", 0);  \n            // (1)!\n        }\n    }\n}\n</code></pre> <ol> <li>We replaced the hardcoded string with <code>ModFiles.GetCode(\"mycode.gml\")</code> which grabs the content of <code>myCode.gml</code> and injects it into the script.</li> </ol> <p>Now if we compile this mod and press F5 in game, it should quicksave our game.  That's great, but what if we want to edit a script that breaks when edited in UTMT ?  The solution is the exact same as in UTMT, we can edit the assembly directly !</p> MyMod.cs<pre><code>using ModShardLauncher;\nusing ModShardLauncher.Mods;\n\nnamespace MyMod\n{\n    public class MyMod : Mod\n    {\n        public override string Author =&gt; \"author\";\n        public override string Name =&gt; \"mod_name\";\n        public override string Description =&gt; \"mod_description\";\n        public override string Version =&gt; \"1.0.0.0\";\n\n        public override void PatchMod()\n        {\n            ModLoader.InsertAssemblyString(\":[0]\\ncall.i gml_Script_scr_smoothSaveAuto(argc=0)\\npopz.v\", \"gml_Object_o_player_KeyPress_116\", 1 );\n            // (1)!\n        }\n    }\n}\n</code></pre> <ol> <li>This line inserts the assembly instructions corresponding to the quicksave code seen in previous examples.</li> </ol> <p>Important Note</p> <p>The demonstrated functions are far from being the only options to inject our code into the game files.  This guide is meant for beginners, and as such tries to keep things relatively simple.  For more options, feel free to check out the API.</p>"},{"location":"guides/start-modding.html#advanced-injections","title":"Advanced Injections","text":"<p>For more advanced mods, you might require more accurate injections than simply inserting or replacing code or assembly instructions at specific lines.  To that effect, MSL offers a collection of methods for precise injection, which also helps making your injections more resilient to updates by matching a specific line or set of line rather than using a line number. </p> <p>They are divided in 4 different stages, namely :</p> <ul> <li>Loading</li> <li>Matching</li> <li>Acting</li> <li>Saving</li> </ul> <p>Here's an example of that :</p> Chained Methods<pre><code>ModLoader.LoadGML(\"gml_GlobalScript_scr_sessionDataInit\") // Loading a script from the game's files\n.MatchFrom(\"global.HP = -1\") // Finding the line containing `global.HP = -1`\n.ReplaceBy(\"global.HP = 50\") // Replacing it with `gobal.HP = 50`\n.Save() // Saving the file\n</code></pre> <p>Important Note</p> <p>Once again, this is only a simple example of the available functions, to learn more check out the API.</p> <p></p>"},{"location":"zh/index.html","title":"ModShardLauncher Modding Documentation","text":"<p>\u6b22\u8fce\u8bbf\u95ee ModShardLauncher \u6587\u6863 \uff01</p> <p>\u591a\u79cd\u8bed\u8a00</p> <p>\u672c\u6587\u6863\u63d0\u4f9b\u591a\u79cd\u8bed\u8a00\u7248\u672c\u3002  \u60a8\u53ef\u4ee5\u70b9\u51fb\u9875\u9762\u9876\u90e8\u7684\u8bed\u8a00\u6309\u94ae\u66f4\u6539\u8bed\u8a00\u3002   \u67d0\u4e9b\u9875\u9762\u53ef\u80fd\u4e0d\u652f\u6301\u6240\u6709\u8bed\u8a00\uff0c\u8bf7\u968f\u65f6\u63d0\u4f9b\u60a8\u7684\u610f\u89c1\uff01</p>"},{"location":"zh/guides/api.html","title":"API","text":"<p>\u8be5\u9875\u9762\u4ecb\u7ecd\u4e86\u672c\u5de5\u5177\u53ef\u4ee5\u4f7f\u7528\u7684API.</p> <ul> <li>API<ul> <li>ModLoader<ul> <li>ModLoader.AddObject(string name)</li> <li>ModLoader.GetObject(string name)</li> <li>ModLoader.SetObject(string name, UndertaleGameObject o)</li> <li>ModLoader.AddCode(string Code, string name)</li> <li>ModLoader.AddFunction(string Code, string name)</li> <li>ModLoader.GetTable(string name)</li> <li>GetDecompiledCode(string name)</li> <li>GetDisassemblydCode(string name)</li> </ul> </li> </ul> </li> </ul>"},{"location":"zh/guides/api.html#modloader","title":"ModLoader","text":""},{"location":"zh/guides/api.html#modloaderaddobjectstring-name","title":"ModLoader.AddObject(string name)","text":"<p>\u6839\u636e\u7ed9\u51fa\u7684\u540d\u79f0, \u5411\u6570\u636e\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4e00\u4e2aGame Object, \u5e76\u8fd4\u56de\u8fd9\u4e2aObject.</p>"},{"location":"zh/guides/api.html#modloadergetobjectstring-name","title":"ModLoader.GetObject(string name)","text":"<p>\u6839\u636e\u7ed9\u51fa\u7684\u540d\u79f0, \u4ece\u6570\u636e\u6587\u4ef6\u4e2d\u67e5\u627e\u4e00\u4e2aGame Object, \u5e76\u8fd4\u56de\u8fd9\u4e2aObject. \u5982\u679c\u627e\u4e0d\u5230\u5219\u8fd4\u56denull.</p>"},{"location":"zh/guides/api.html#modloadersetobjectstring-name-undertalegameobject-o","title":"ModLoader.SetObject(string name, UndertaleGameObject o)","text":"<p>\u6839\u636e\u7ed9\u51fa\u7684\u540d\u79f0\u548cObject, \u7ed9\u6570\u636e\u6587\u4ef6\u4e2d\u5bf9\u5e94\u7684Game Object\u8d4b\u503c.</p>"},{"location":"zh/guides/api.html#modloaderaddcodestring-code-string-name","title":"ModLoader.AddCode(string Code, string name)","text":"<p>\u6839\u636e\u7ed9\u51fa\u7684\u540d\u79f0\u548cCode, \u5411\u6570\u636e\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4e00\u4e2aCode, \u5e76\u8fd4\u56de\u8fd9\u4e2aCode.</p> <p>\u6ce8\u610f\u4e0d\u8981\u4f7f\u7528AddCode\u6765\u6dfb\u52a0\u65b0\u7684function, \u82e5\u60f3\u6dfb\u52a0\u65b0\u7684function, \u8bf7\u4f7f\u7528AddFunction.</p>"},{"location":"zh/guides/api.html#modloaderaddfunctionstring-code-string-name","title":"ModLoader.AddFunction(string Code, string name)","text":"<p>\u6839\u636e\u7ed9\u51fa\u7684\u540d\u79f0\u548cCode, \u5411\u6570\u636e\u6587\u4ef6\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u5305\u542bFunction\u7684Code, \u5e76\u8fd4\u56de\u8fd9\u4e2aCode</p> <p>\u8bf7\u4f7f\u7528\u672c\u65b9\u6cd5\u6dfb\u52a0Function, \u5426\u5219\u6570\u636e\u6587\u4ef6\u5c06\u635f\u574f.</p>"},{"location":"zh/guides/api.html#modloadergettablestring-name","title":"ModLoader.GetTable(string name)","text":"<p>\u6839\u636e\u7ed9\u51fa\u7684\u540d\u79f0, \u4ece\u6570\u636e\u6587\u4ef6\u4e2d\u67e5\u627e\u4e00\u4e2aTable, \u5c06\u5176\u8f6c\u6362\u4e3aList&lt;string&gt;\u5e76\u8fd4\u56de\u8fd9\u4e2aList.</p>"},{"location":"zh/guides/api.html#getdecompiledcodestring-name","title":"GetDecompiledCode(string name)","text":"<p>\u6839\u636e\u7ed9\u51fa\u7684\u540d\u79f0, \u4ece\u6570\u636e\u6587\u4ef6\u4e2d\u67e5\u627e\u4e00\u4e2aCode, \u5e76\u8fd4\u56de\u8fd9\u4e2aCode\u7684Decompile\u7248\u672c\u4ee3\u7801.</p>"},{"location":"zh/guides/api.html#getdisassemblydcodestring-name","title":"GetDisassemblydCode(string name)","text":"<p>\u6839\u636e\u7ed9\u51fa\u7684\u540d\u79f0, \u4ece\u6570\u636e\u6587\u4ef6\u4e2d\u67e5\u627e\u4e00\u4e2aCode, \u5e76\u8fd4\u56de\u8fd9\u4e2aCode\u7684Disassembly\u7248\u672c\u4ee3\u7801.(\u8bf4\u5b9e\u8bdd, \u6211\u5e76\u4e0d\u77e5\u9053\u8fd9\u4e2a\u65b9\u6cd5\u6709\u4ec0\u4e48\u5375\u7528)</p>"},{"location":"zh/guides/how-to-play-mod.html","title":"\u5982\u4f55\u4f7f\u7528MOD","text":"<p>TODO</p> <p> </p>"},{"location":"zh/guides/introduction.html#modshardlauncher_1","title":"\u4ec0\u4e48\u662fModShardLauncher?","text":"<p>ModShardLauncher\u662f\u4e00\u4e2a\u7528\u4e8e\u7ed9StoneShard(\u7d2b\u8272\u6676\u77f3)\u8fd9\u6b3e\u6e38\u620f\u52a0\u8f7dmod\u7684\u5de5\u5177\u3002</p> <p>\u5728\u6211\u5f00\u53d1\u8fd9\u6b3e\u5de5\u5177\u4e4b\u524d, mod\u4f5c\u8005\u4eec\u90fd\u662f\u4f7f\u7528UTMT, \u5373UndertaleModTool\u8fd9\u6b3e\u5de5\u5177\u6765\u5f00\u53d1mod\u5e76\u4fdd\u5b58\u7684. \u8fd9\u6837\u5f00\u53d1\u7684\u96be\u70b9\u5728\u4e8e, \u4f5c\u8005\u4eec\u53ea\u80fd\u5236\u4f5c\u6e90\u7801mod, \u4e5f\u5c31\u662f\u8bf4, \u4e0d\u540c\u7684mod\u4e0d\u80fd\u4e00\u8d77\u52a0\u8f7d, \u9664\u975e\u4f60\u81ea\u5df1\u628a\u4ed6\u4eec\u7684\u5185\u5bb9\u6574\u5408\u5230\u4e00\u8d77. \u800c\u4e14UTMT\u4f7f\u7528\u8f83\u4e3a\u7e41\u7410, \u5e76\u4e0d\u9002\u5408\u7528\u4e8e\u5f00\u53d1StoneShard\u7684mod. \u4e00\u65e6\u4f5c\u8005\u8fdb\u884c\u66f4\u65b0, \u6240\u6709mod\u5c06\u4e0d\u518d\u9002\u7528, \u6e90\u6587\u4ef6\u9700\u8981\u91cd\u65b0\u88ab\u7f16\u8f91\u548c\u4fdd\u5b58.</p> <p>\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e9b\u75db\u82e6\u7684\u95ee\u9898, \u6211\u6253\u7b97\u5f00\u53d1\u4e00\u6b3e\u5de5\u5177, \u4e5f\u5c31\u662fModShardLauncher.</p>"},{"location":"zh/guides/introduction.html#modshardlauncher_2","title":"ModShardLauncher\u662f\u5982\u4f55\u5de5\u4f5c\u7684?","text":"<p>\u5b9e\u9645\u4e0a, UTMT\u662f\u7528C#\u8fd9\u95e8\u8bed\u8a00\u5f00\u53d1\u7684. \u56e0\u6b64, \u5f15\u7528\u5b83\u7684\u6e90\u7801\u5c31\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u8bfb\u53d6\u548c\u4fdd\u5b58data.win\u4e2d\u7684\u6570\u636e. \u5e76\u4e14\u5728C#\u5f3a\u5927\u7684\u53cd\u5c04\u529f\u80fd\u652f\u6301\u4e0b, mod\u4f5c\u8005\u4eec\u53ef\u4ee5\u901a\u8fc7\u8be5\u5de5\u5177\u5185\u7f6e\u7684\u6253\u5305\u5668\u5c06\u6240\u6709mod\u4ee3\u7801\u4ee5\u53ca\u8d34\u56fe\u6253\u5305\u6210 <code>.sml</code> \u6587\u4ef6, \u7136\u540e\u5de5\u5177\u5185\u7f6e\u7684\u8bfb\u53d6\u5668\u53ef\u4ee5\u8bfb\u53d6\u8fd9\u79cd\u683c\u5f0f\u7684\u6587\u4ef6, \u5e76\u5c06\u5176\u4e2d\u7684\u6570\u636e\u6253\u5305\u8fdb\u65b0\u7684data.win\u6587\u4ef6. \u4ee5\u8fbe\u6210\u591amod\u5171\u5b58, \u4fbf\u6377\u5f00\u53d1\u7684\u76ee\u7684.</p>"},{"location":"zh/guides/introduction.html#mod","title":"\u592a\u68d2\u8fa3 \u6211\u73b0\u5728\u5c31\u60f3\u5f00\u53d1\u4e00\u4e2a\u81ea\u5df1\u7684mod!","text":"<p>\u90a3\u5c31\u4ece\u8fd9\u91cc\u5f00\u59cb\u5427!</p>"},{"location":"zh/guides/start-modding-with-vsc.html","title":"\u4f7f\u7528Visual Studio Code\u8fdb\u884c\u5f00\u53d1","text":"<ul> <li>\u4f7f\u7528Visual Studio Code\u8fdb\u884c\u5f00\u53d1<ul> <li>\u524d\u8a00</li> <li>\u4e0b\u8f7d\u5de5\u5177</li> <li>\u4e0b\u8f7d\u63d2\u4ef6</li> </ul> </li> </ul>"},{"location":"zh/guides/start-modding-with-vsc.html#_1","title":"\u524d\u8a00","text":"<p>\u4e3a\u4ec0\u4e48\u8981\u628a\u8fd9\u4e2a\u6559\u7a0b\u5355\u72ec\u62ff\u51fa\u6765\u5462? \u9996\u5148\u4e00\u4e2a\u539f\u56e0\u662f\u8003\u8651\u5230\u60f3\u505amod\u7684\u5404\u4f4d\u5bf9\u4e8e\u7f16\u7a0b\u53ef\u80fd\u4e00\u65e0\u6240\u77e5, \u800c\u4e0b\u8f7dVisual Studio\u7684\u6b65\u9aa4\u4e0e\u67d0\u4e9b\u7f16\u7a0b\u77e5\u8bc6\u662f\u76f8\u5173\u7684, \u56e0\u6b64\u53ef\u80fd\u4f1a\u9020\u6210\u4e00\u4e9b\u8bef\u89e3\u6216\u8ba9\u5404\u4f4d\u5728\u524d\u671f\u505a\u65e0\u7528\u529f\u3002</p> <p>Visual Studio Code \u662f\u4f5c\u8005\u5f88\u559c\u6b22\u7684\u4e00\u6b3e\u6587\u672c\u7f16\u8f91\u5668, \u56e0\u6b64\u5173\u4e8e\u8fd9\u65b9\u9762\u7684\u5185\u5bb9\u6211\u4eec\u90fd\u56f4\u7ed5VSCode\u6765\u8bb2. </p>"},{"location":"zh/guides/start-modding-with-vsc.html#_2","title":"\u4e0b\u8f7d\u5de5\u5177","text":"<p>\u5728\u8fd9\u91cc\u4e0b\u8f7d</p> <p>\u7f51\u4e0a\u4e5f\u6709\u5f88\u591a\u5173\u4e8e\u4e0b\u8f7dVSCode\u7684\u6559\u7a0b, \u4f60\u53ef\u4ee5\u53c2\u8003\u8fd9\u4e9b\u6559\u7a0b\u6765\u8fdb\u884c\u4e0b\u8f7d. \u57fa\u672c\u4e0a\u4e00\u8def\u6309\u7ee7\u7eed\u5c31\u53ef\u4ee5\u4e86.</p>"},{"location":"zh/guides/start-modding-with-vsc.html#_3","title":"\u4e0b\u8f7d\u63d2\u4ef6","text":""},{"location":"zh/guides/start-modding.html","title":"\u5f00\u59cb\u5427!","text":"<ul> <li>\u5f00\u59cb\u5427!<ul> <li>C#\u57fa\u7840</li> <li>\u4e0b\u8f7d\u5de5\u5177</li> <li>\u521b\u5efa\u4f60\u7684\u7b2c\u4e00\u4e2amod<ul> <li>\u521b\u5efamod!</li> <li>\u7a0b\u5e8f\u96c6\u5f15\u7528!</li> <li>Mod\u4e3b\u7c7b!</li> <li>Mod\u4fe1\u606f!</li> <li>\u7f16\u8bd1Mod!</li> </ul> </li> <li>\u521b\u5efa\u4f60\u7684\u7b2c\u4e00\u628a\u6b66\u5668<ul> <li>\u521b\u5efa\u6b66\u5668\u7c7b!</li> <li>\u4fee\u6539\u6b66\u5668\u7684\u4fe1\u606f!</li> <li>\u6b66\u5668\u8d34\u56fe!</li> <li>\u52a0\u8f7dMod!</li> <li>\u8fdb\u5165\u6e38\u620f!</li> </ul> </li> </ul> </li> </ul>"},{"location":"zh/guides/start-modding.html#c","title":"C#\u57fa\u7840","text":"<p>\u5982\u679c\u4f60\u60f3\u8981\u5236\u4f5cmod, \u90a3\u8bf7\u786e\u4fdd\u4f60\u6709\u4e00\u5b9a\u7684C#\u57fa\u7840, \u4e0d\u7136\u4f60\u53ef\u80fd\u4f1a\u770b\u4e0d\u61c2\u5de5\u5177\u7684API\u662f\u600e\u4e48\u7528\u7684.</p>"},{"location":"zh/guides/start-modding.html#_2","title":"\u4e0b\u8f7d\u5de5\u5177","text":"<p>\u8981\u60f3\u5236\u4f5cmod, \u4f60\u9996\u5148\u9700\u8981\u4e00\u4e2a\u5199\u4ee3\u7801\u7684\u5de5\u5177.</p> <p>\u6bd4\u5982Visual Studio, \u8fd9\u662f\u4e00\u6b3e\u5f88\u4e13\u4e1a\u7684\u5f00\u53d1\u5de5\u5177, \u4f60\u53ef\u4ee5\u7528\u5b83\u65b9\u4fbf\u5730\u5f00\u53d1mod.</p> <p>\u5728\u8fd9\u91cc\u4e0b\u8f7d</p> <p>\u5728\u4e0b\u8f7d\u65f6, \u786e\u4fdd\u4f60\u9009\u62e9\u4e86 <code>.NET Desktop Development</code> \u5de5\u4f5c\u8d1f\u8f7d. \u5176\u4ed6\u7684\u8d1f\u8f7d\u53ef\u4ee5\u4e0d\u7528\u4e0b\u8f7d.</p> <p>\u6700\u540e, \u5230\u5fae\u8f6f\u5b98\u7f51\u67e5\u627e <code>.NET 6.0 SDK</code> \u6765\u4e0b\u8f7d\u5b89\u88c5\u5305. \u7136\u540e\u91cd\u542f\u4f60\u7684\u7535\u8111\u6765\u5e94\u7528\u8fd9\u4e9b\u66f4\u6539.</p> <p>\u53e6\u4e00\u4e2a\u9009\u62e9\u662fVisual Studio Code, \u5728\u6211\u770b\u6765\u5176\u5b9e\u7528VSCode\u5c31\u8db3\u4ee5\u5236\u4f5cStoneShard\u7684mod\u4e86.</p> <p>\u5bf9\u4e8eVisual Studio Code\u7684\u6559\u7a0b, \u8bf7\u79fb\u6b65\u8fd9\u91cc</p>"},{"location":"zh/guides/start-modding.html#mod","title":"\u521b\u5efa\u4f60\u7684\u7b2c\u4e00\u4e2amod","text":"<p>\u9996\u5148, \u4f60\u9700\u8981\u542f\u52a8 ModShardLauncher.exe , \u542f\u52a8\u4e4b\u540e\u5b83\u4f1a\u5728\u6839\u76ee\u5f55\u4e0b\u521b\u5efa\u4e24\u4e2a\u6587\u4ef6\u5939, \u4e00\u4e2a\u662fMods, \u53e6\u4e00\u4e2a\u662fModSources.</p> <p>\u7136\u540e\u5728ModSources\u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u5939, \u4f60\u7684\u7b2c\u4e00\u4e2amod\u5c31\u4ece\u8fd9\u91cc\u5f00\u59cb\u4e86.</p>"},{"location":"zh/guides/start-modding.html#mod_1","title":"\u521b\u5efamod!","text":"<p>\u521b\u5efamod\u7684\u65b9\u5f0f\u6709\u5f88\u591a, \u6211\u4eec\u5148\u6765\u62ffVisual Studio\u4e3e\u4f8b. \u9996\u5148\u8fd0\u884cVS, \u70b9\u51fb\u521b\u5efa\u65b0\u9879\u76ee, \u641c\u7d22\u7c7b\u5e93\u5e76\u5355\u51fb\u4e0b\u4e00\u6b65. \u5982\u56fe:  </p> <p>\u7136\u540e\u8f93\u5165\u4f60mod\u7684\u540d\u5b57, \u9009\u62e9\u8def\u5f84\u4e3a\u521a\u624d ModShardLauncher.exe \u521b\u5efa\u7684 Mods \u6587\u4ef6\u5939.  </p> <p>\u6700\u540e\u9009\u62e9 .Net 6.0\u5373\u53ef  </p>"},{"location":"zh/guides/start-modding.html#_3","title":"\u7a0b\u5e8f\u96c6\u5f15\u7528!","text":"<p>\u9996\u5148\u6211\u4eec\u9700\u8981\u5f15\u7528\u5de5\u5177\u7684\u7a0b\u5e8f\u96c6, \u5373Dll\u6587\u4ef6.</p> <p>\u5148\u6253\u5f00\u89e3\u51b3\u65b9\u6848\u8d44\u6e90\u7ba1\u7406\u5668.  </p> <p>\u53f3\u952e\u4f9d\u8d56\u9879, \u5e76\u5355\u51fb\u6dfb\u52a0\u9879\u76ee\u5f15\u7528.  </p> <p>\u70b9\u51fb\u6d4f\u89c8.  </p> <p>\u6700\u540e\u9009\u62e9ModShardLauncher.dll\u5e76\u70b9\u51fb\u6dfb\u52a0.  </p>"},{"location":"zh/guides/start-modding.html#mod_2","title":"Mod\u4e3b\u7c7b!","text":"<p>\u5982\u679c\u4f60\u6709C#\u57fa\u7840, \u90a3\u4f60\u4e00\u5b9a\u5bf9 \u7c7b(Class) \u6709\u4e86\u89e3.\u6211\u4eec\u63a5\u4e0b\u6765\u5c31\u8981\u521b\u5efa\u4e00\u4e2aMod\u7684\u4e3b\u7c7b.</p> <p>\u521b\u5efa\u9879\u76ee\u65f6, VS\u5e94\u8be5\u5df2\u7ecf\u4e3a\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2a\u7c7b, \u540d\u5b57\u53eb\u505aClass1. \u6211\u4eec\u8981\u505a\u7684\u5c31\u662f\u5148\u6dfb\u52a0\u5bf9 <code>ModShardLauncher</code> \u548c <code>ModShardLauncher.Mods</code> \u8fd9\u4e24\u4e2a\u547d\u540d\u7a7a\u95f4\u7684\u5f15\u7528. \u7136\u540e\u5c06\u4ee3\u7801\u6539\u6210\u5982\u4e0b\u8fd9\u6837:  </p> <p>\u53ef\u4ee5\u770b\u5230\u6211\u4eec\u5148\u662f\u628a\u7c7b\u7684\u8bbf\u95ee\u7ea7\u522b\u4ece <code>internal</code> \u6539\u4e3a\u4e86 <code>public</code> , \u8fd9\u6837\u4e00\u6765Mod\u52a0\u8f7d\u65f6\u5c31\u53ef\u4ee5\u8bfb\u53d6\u5230\u8fd9\u4e2a\u7c7b. \u7136\u540e\u6211\u4eec\u628a\u7c7b\u540d\u6539\u6210\u4e86 <code>MyFirstMod</code> , \u5e76\u8ba9\u8fd9\u4e2a\u7c7b\u7ee7\u627f <code>Mod</code> \u7c7b.</p>"},{"location":"zh/guides/start-modding.html#mod_3","title":"Mod\u4fe1\u606f!","text":"<p>\u63a5\u4e0b\u6765\u6211\u4eec\u7ed9Mod\u6dfb\u52a0\u57fa\u7840\u7684\u4fe1\u606f.</p> <p>\u5728 <code>MyFirstMod</code> \u7c7b\u4e2d\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801: <pre><code>public override string Name =&gt; \"MyFirstMod\";\npublic override string Author =&gt; \"Mantodea\";\npublic override string Description =&gt; \"\u6211\u7684\u7b2c\u4e00\u4e2amod\";\n</code></pre> \u8fd9\u6837\u6211\u4eec\u5c31\u8bbe\u7f6e\u4e86mod\u7684\u540d\u79f0, \u4f5c\u8005\u4e0e\u63cf\u8ff0\u4fe1\u606f.</p>"},{"location":"zh/guides/start-modding.html#mod_4","title":"\u7f16\u8bd1Mod!","text":"<p>\u63a5\u4e0b\u6765\u6211\u4eec\u542f\u52a8ModShardLauncher.  \u53ef\u4ee5\u770b\u5230\u6211\u4eec\u7684Mod\u6e90\u7801\u5df2\u7ecf\u88ab\u52a0\u8f7d\u51fa\u6765\u4e86.  </p> <p>\u5728\u7f16\u8bd1mod\u4e4b\u524d, \u6211\u4eec\u9700\u8981\u5148\u70b9\u51fb\u6a21\u7ec4\u754c\u9762\u5de6\u4e0a\u89d2\u7684\u6587\u4ef6\u5939\u6309\u94ae, \u5e76\u9009\u62e9 \u539f\u7248 \u7684data.win\u6587\u4ef6\u8fdb\u884c\u52a0\u8f7d.</p> \u4e3a\u4ec0\u4e48\u8981\u4f7f\u7528\u539f\u7248\u6587\u4ef6? <p>\u8fd9\u4e2a\u5de5\u5177\u662f\u57fa\u4e8edata.win\u6587\u4ef6\u5185\u7684\u5404\u79cd\u4fe1\u606f\u7684\u540d\u79f0\u6765\u5de5\u4f5c\u7684, \u5982\u679c\u4f60\u5df2\u7ecf\u52a0\u5165\u4e86\u6e90\u7801mod, \u5f88\u53ef\u80fd\u4f1a\u51fa\u73b0\u5404\u79cd\u5d29\u6e83\u7684\u60c5\u51b5.</p> \u4e3a\u4ec0\u4e48\u8981\u52a0\u8f7d\u6e38\u620f\u6587\u4ef6\u624d\u80fd\u7f16\u8bd1? <p>\u4e3a\u4e86\u83b7\u53d6\u6e38\u620f\u7248\u672c, \u9632\u6b62\u6781\u5c0f\u53ef\u80fd\u51fa\u73b0\u7684\u7248\u672c\u4e0d\u540c\u800c\u5d29\u6e83\u73b0\u8c61(\u786e\u4fe1)</p> <p>\u7136\u540e\u6211\u4eec\u5c31\u53ef\u4ee5\u70b9\u51fb <code>MyFirstMod</code> \u680f\u4f4d\u53f3\u4e0b\u89d2\u7684\u7f16\u8bd1\u8fa3! (UI\u73b0\u5728\u560e\u560e\u597d\u770b\u662f\u4e0d\u662f)</p> <p>\u7f16\u8bd1\u6210\u529f\u540e\u7684\u7ed3\u679c:  </p>"},{"location":"zh/guides/start-modding.html#_4","title":"\u521b\u5efa\u4f60\u7684\u7b2c\u4e00\u628a\u6b66\u5668","text":"<p>\u5c31\u5728\u521a\u521a, \u4f60\u7684\u7b2c\u4e00\u4e2amod\u5df2\u7ecf\u6210\u529f\u7f16\u8bd1\u4e86! \u63a5\u4e0b\u6765, \u8ba9\u6211\u4eec\u4e3a\u5b83\u6dfb\u52a0\u4e00\u4e9b\u770b\u5f97\u5230\u7684\u4e1c\u897f\u5427.</p>"},{"location":"zh/guides/start-modding.html#_5","title":"\u521b\u5efa\u6b66\u5668\u7c7b!","text":"<p>\u9996\u5148\u70b9\u51fb\u53f3\u4fa7\u7684\u89e3\u51b3\u65b9\u6848\u8d44\u6e90\u7ba1\u7406\u5668, \u7136\u540e\u53f3\u952e\u4f60\u7684\u9879\u76ee, \u70b9\u51fb\u6dfb\u52a0, \u6700\u540e\u70b9\u51fb\u65b0\u5efa\u9879, \u5982\u56fe:  </p> <p>\u540d\u5b57\u5c31\u8f93\u5165\u8fd9\u628a\u6b66\u5668\u7684\u540d\u79f0\u5373\u53ef, \u8fd9\u91cc\u6211\u4eec\u4f7f\u7528 <code>MyFirstWeapon</code> \u4f5c\u4e3a\u5b83\u7684\u540d\u5b57.</p> <p>\u63a5\u4e0b\u6765\u8fdb\u5165\u4ee3\u7801\u754c\u9762, \u8fd8\u662f\u4e00\u6837\u7684\u64cd\u4f5c, \u5c06 <code>internal</code> \u6539\u4e3a <code>public</code> , \u4ee5\u4fbfMod\u52a0\u8f7d\u65f6\u53ef\u4ee5\u52a0\u8f7d\u5230\u8fd9\u628a\u6b66\u5668\u7684\u4fe1\u606f. \u7136\u540e\u6dfb\u52a0\u5bf9 <code>ModShardLauncher</code> \u548c <code>ModShardLauncher.Mods</code> \u8fd9\u4e24\u4e2a\u547d\u540d\u7a7a\u95f4\u7684\u5f15\u7528.  \u5e76\u8ba9\u6b66\u5668\u7c7b\u7ee7\u627f <code>Weapon</code> \u7c7b.</p>"},{"location":"zh/guides/start-modding.html#_6","title":"\u4fee\u6539\u6b66\u5668\u7684\u4fe1\u606f!","text":"<p>\u73a9\u8fc7\u7d2b\u6676\u7684\u4eba\u90fd\u77e5\u9053, \u7d2b\u6676\u91cc\u7684\u6b66\u5668\u5c5e\u6027\u5f88\u591a. \u6328\u4e2a\u8bbe\u7f6e\u4e0d\u4ec5\u9ebb\u70e6, \u8fd8\u4f1a\u5f88\u75db\u82e6, \u800c\u4e14\u8fd8\u6709\u53ef\u80fd\u843d\u4e0b\u67d0\u4e9b\u5c5e\u6027, \u5bfc\u81f4mod\u6ca1\u6cd5\u6b63\u5e38\u52a0\u8f7d.</p> \u4f60\u77e5\u9053\u7684\u592a\u591a\u4e86 <p>\u5b9e\u9645\u4e0a\u662f\u56e0\u4e3a\u6bdb\u5b50\u5199\u7684\u4ee3\u7801\u5f88\u50bb\u903c.</p> <p>\u90a3\u4e48\u6709\u6ca1\u6709\u4e00\u79cd\u529e\u6cd5\u53ef\u4ee5\u8ba9\u6211\u4eec\u7b80\u5355\u5feb\u6377\u7684\u8bbe\u7f6e\u4e00\u628a\u6b66\u5668\u7684\u5c5e\u6027\u5462?</p> <p>\u9996\u5148\u6211\u4eec\u6dfb\u52a0\u5982\u4e0b\u4ee3\u7801\u6765\u91cd\u5199 <code>SetDefaults</code> \u65b9\u6cd5. <pre><code>public override void SetDefaults()\n{\n\n}\n</code></pre></p> \u4f60\u77e5\u9053\u7684\u592a\u591a\u4e86 <p>\u6709\u79cdtModLoader\u7684\u98ce\u683c, \u6211\u5df2\u7ecf\u88ab\u837c\u6bd2\u4e86.</p> <p>\u770b\u82f1\u6587\u53ef\u4ee5\u77e5\u9053, \u8fd9\u4e2a\u65b9\u6cd5\u7528\u4e8e\u5728\u52a0\u8f7d\u6b66\u5668\u65f6\u8bbe\u5b9a\u5b83\u7684\u5c5e\u6027.</p> <p>\u63a5\u4e0b\u6765\u6211\u4eec\u9686\u91cd\u4ecb\u7ecd---- <code>CloneDefaults</code> \u65b9\u6cd5!</p> <p>\u6ca1\u9519, \u4e3a\u4e86\u9632\u6b62\u73a9\u5bb6\u7d2f\u6b7b(\u4e0d\u662f) \u6211\u4eecmodder\u5f00\u53d1\u65f6\u7ecf\u5e38\u5fd8\u8bb0\u5404\u79cd\u5c5e\u6027, \u6211\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b9\u6cd5\u6765\u8ba9\u5f53\u524d\u8fd9\u628a\u6b66\u5668\u7684\u9664 <code>Name</code> \u4e0e <code>ID</code> \u4e24\u4e2a\u5c5e\u6027\u4e4b\u5916\u7684\u6240\u6709\u5c5e\u6027\u5168\u90e8\u7167\u6284\u53e6\u5916\u4e00\u628a\u539f\u7248\u6b66\u5668----<code>CloneDefaults</code>! \u56e0\u6b64, \u53ea\u9700\u628a\u4ee3\u7801\u6539\u6210\u8fd9\u6837: <pre><code>public override void SetDefaults()\n{\n    CloneDefaults(\"Homemade Blade\");\n    Name = \"MyFirstWeapon\";\n    ID = \"MyFirstMod1\";\n}\n</code></pre></p> <p>\u8fd9\u6837\u4e00\u6765, \u8fd9\u628a\u6b66\u5668\u5c31\u53d8\u6210\u4e86\u4e00\u628a\u9664\u4e86\u540d\u5b57\u4e0d\u4e00\u6837\u5176\u4ed6\u5168\u90e8\u4e00\u6837\u7684\u6362\u76ae\u571f\u5200(\u6709\u79cdNTR\u7684\u611f\u89c9)</p> <p>\u4f46\u662f\u9700\u8981\u6ce8\u610f\u7684\u662f, <code>CloneDefaults</code> \u5e76\u4e0d\u4f1a\u5bf9\u6b66\u5668\u7684\u5404\u79cd\u8bed\u8a00\u540d\u79f0\u548c\u4ecb\u7ecd\u8fdb\u884c\u8d4b\u503c, \u8fd9\u4e9b\u4ecd\u7136\u9700\u8981\u4f60\u624b\u52a8\u4fee\u6539. \u56e0\u6b64\u6211\u4eec\u518d\u52a0\u4e0a\u4e24\u884c:</p> <pre><code>public override void SetDefaults()\n{\n    CloneDefaults(\"Homemade Blade\");\n    Name = \"MyFirstWeapon\";\n    ID = \"MyFirstMod1\";\n    Description[ModLanguage.Chinese] = \"\u8fd9\u662f\u6211\u7684\u7b2c\u4e00\u628a\u6b66\u5668\";\n    NameList[ModLanguage.Chinese] = \"\u6211\u7684\u795e\u5251\u5496\u55b1\u68d2\";\n}\n</code></pre> <p>\u8fd9\u6837\u4e00\u6765\u6211\u4eec\u7684\u7b2c\u4e00\u628a\u6b66\u5668\u7b97\u662f\u521d\u6b65\u5b8c\u6210\u4e86.</p>"},{"location":"zh/guides/start-modding.html#_7","title":"\u6b66\u5668\u8d34\u56fe!","text":"<p>StoneShard\u505amod\u6700\u75db\u82e6\u7684\u4e00\u90e8\u5206\u5c31\u662f\u8fd9\u91cc\u4e86. \u8d34\u56fe, \u4e00\u628a\u6700\u57fa\u7840\u7684\u6b66\u5668\u7adf\u7136\u9700\u8981\u516d\u5f20\u8d34\u56fe, \u8fd9\u65e0\u7591\u589e\u52a0\u4e86modder\u7684\u5de5\u4f5c\u91cf.</p> <p>\u5982\u679c\u4f60\u6ca1\u5f97\u8d34\u56fe, \u4f60\u53ef\u4ee5\u4f7f\u7528UTMT\u5bf9\u539f\u7248\u7684\u8d34\u56fe\u8fdb\u884c\u5bfc\u51fa, \u7136\u540e\u653e\u5728Mod\u76ee\u5f55\u9664 <code>.vs, bin \u548c obj</code> \u7684\u4efb\u4f55\u5730\u65b9, \u6253\u5305\u65f6\u4f1a\u81ea\u52a8\u5c06\u4ed6\u4eec\u6253\u5305\u8fdbdata.win\u7684.  </p> <p>\u5982\u56fe\u6240\u793a, \u4ece\u4e0a\u5230\u4e0b\u4f9d\u6b21\u662f: \u4eba\u7269\u53f3\u624b\u62ff\u6b66\u5668, \u4eba\u7269\u5de6\u624b\u62ff\u6b66\u5668, \u80cc\u5305\u4e2d\u7684\u6b66\u5668(\u6709\u4e09\u5f20\u7684\u539f\u56e0\u662f\u7d2b\u6676\u7684\u6b66\u5668\u6709\u7834\u635f\u7cfb\u7edf, \u5982\u679c\u4f60\u4e0d\u60f3\u753b, \u53ef\u4ee5\u628a\u5b8c\u6574\u7248\u7684\u6b66\u5668\u590d\u5236\u4e09\u904d), \u6389\u843d\u7684\u6b66\u5668.</p> \u6ce8\u610f <p>\u6b66\u5668\u5728\u80cc\u5305\u4e2d\u7684\u8d34\u56fe\u957f\u5bbd\u5fc5\u987b\u662f27\u7684\u500d\u6570, \u8fd9\u662f\u56e0\u4e3a\u7d2b\u6676\u7684\u80cc\u5305\u4e00\u683c\u4e3a27*27</p> <p>\u4ee5\u4e0a\u8fd9\u5f20\u56fe\u53ea\u9488\u5bf9\u5355\u624b\u6b66\u5668, \u5982\u679c\u662f\u53cc\u624b\u6b66\u5668, \u5219\u53ea\u9700\u8981char\u800c\u4e0d\u9700\u8981char_left, \u56e0\u4e3a\u53cc\u624b\u6b66\u5668\u53ea\u6709\u4e00\u79cd\u62ff\u53d6\u65b9\u5f0f.</p> <p>\u51c6\u5907\u597d\u6240\u6709\u8fd9\u4e9b\u4e1c\u897f\u540e, \u4f60\u5c31\u53ef\u4ee5\u518d\u6b21\u6253\u5f00 ModShardLauncher.exe \u91cd\u590d\u4e4b\u524d\u7684\u7f16\u8bd1\u6b65\u9aa4.</p>"},{"location":"zh/guides/start-modding.html#mod_5","title":"\u52a0\u8f7dMod!","text":"<p>\u6ce8\u610f!!!</p> <p>\u6709\u4e00\u70b9\u5f88\u91cd\u8981, \u4f60\u9700\u8981\u628a\u5de5\u5177\u76ee\u5f55\u4e0b\u4e00\u4e2a\u53eb\u505a <code>ModShard.dll</code> \u7684\u6587\u4ef6\u79fb\u52a8\u5230\u6e38\u620f\u7684\u6839\u76ee\u5f55, \u4ed6\u662f\u8be5\u5de5\u5177\u5185\u7f6e\u7684\u4e00\u4e2a\u6e38\u620f\u63d2\u4ef6. \u5426\u5219\u4f60\u5c06\u65e0\u6cd5\u542f\u52a8\u6e38\u620f!</p> <p>\u6700\u540e\u4e00\u6b65, \u4e5f\u5c31\u662f\u52a0\u8f7dMod\u4e86, \u5728\u4f60\u7f16\u8bd1\u5b8cmod\u4e4b\u540e, \u4f60\u4f1a\u53d1\u73b0\u4e0a\u65b9\u7684\u6a21\u7ec4\u754c\u9762\u4e2d\u591a\u51fa\u4e86\u4f60\u7684mod, \u9009\u62e9\u5b83\u53f3\u4e0b\u89d2\u7684\u542f\u7528. \u6700\u540e\u70b9\u51fb\u5de6\u4e0a\u89d2\u7684\u4fdd\u5b58\u6309\u94ae, \u5c31\u53ef\u4ee5\u628amod\u6570\u636e\u6253\u5305\u8fdb\u4f60\u521a\u624d\u52a0\u8f7d\u7684\u90a3\u4e2a\u539f\u7248data.win\u4e86. \u628a\u6253\u5305\u597d\u7684\u6570\u636e\u968f\u4fbf\u5b58\u5728\u4ec0\u4e48\u5730\u65b9, \u628a\u539f\u7248\u7684data.win\u632a\u8d70, \u518d\u8fdb\u5165\u6e38\u620f, \u5c31\u4f1a\u63d0\u793a\u4f60\u9009\u62e9\u6570\u636e\u6587\u4ef6. \u9009\u62e9\u6211\u4eec\u521a\u624d\u4fdd\u5b58\u7684\u90a3\u4e2a\u6570\u636e\u6587\u4ef6\u5373\u53ef.</p>"},{"location":"zh/guides/start-modding.html#_8","title":"\u8fdb\u5165\u6e38\u620f!","text":"<p>\u6253\u5f00\u6e38\u620f\u540e, \u4f60\u4f1a\u53d1\u73b0\u6253\u5f00\u4e86\u4e00\u4e2a\u9664\u6e38\u620f\u4e4b\u5916\u7684\u7a97\u53e3, \u90a3\u662f\u521a\u624d\u7684\u63d2\u4ef6\u6253\u5f00\u7684, \u5b83\u7684\u4f5c\u7528\u662f\u7c7b\u4f3c\u4e8e\u4e00\u4e2a\u63a7\u5236\u53f0, \u53ef\u4ee5\u5728\u6e38\u620f\u8fc7\u7a0b\u4e2d\u8fd0\u884c\u4e00\u4e9b\u5185\u7f6e\u51fd\u6570.(\u5982\u679c\u6ca1\u6253\u5f00\u8bb0\u5f97\u8054\u7cfb\u6211 \u4e00\u5b9a\u662f\u54ea\u91cc\u51fa\u95ee\u9898\u4e86)</p> <p>\u6b63\u5e38\u8fdb\u5165\u6e38\u620f, \u63d2\u4ef6\u5185\u7f6e\u4e86\u4e00\u4e2agive\u51fd\u6570, \u4f60\u53ef\u4ee5\u5728\u63d2\u4ef6\u7a97\u53e3\u7684\u4e0b\u65b9 <code>Script</code> \u6587\u672c\u6846\u4e2d\u8f93\u5165 <pre><code>give MyFirstWeapon\n</code></pre> \u6765\u83b7\u53d6\u521a\u624d\u90a3\u628amod\u6b66\u5668.</p> <p>\u5982\u679c\u4f60\u60f3\u7528\u8fd9\u4e2a\u529f\u80fd\u83b7\u53d6\u5176\u4ed6\u6b66\u5668, \u8bf7\u6ce8\u610f\u628a\u6b66\u5668\u540d\u4e2d\u7684\u7a7a\u683c\u6539\u4e3a <code>_</code> , \u5982: <pre><code>give Homemade_Blade\n</code></pre></p> <p>\u6267\u884c\u4e86give\u51fd\u6570\u540e, \u53ef\u4ee5\u53d1\u73b0\u80cc\u5305\u4e2d\u5c31\u591a\u4e86\u4e00\u628amod\u6b66\u5668\u4e86.  </p>"}]}